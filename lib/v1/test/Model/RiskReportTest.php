<?php
/**
 * RiskReportTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Opportify Insights API
 *
 * ## Overview  The **Opportify Insights API** provides access to robust and highly up to date platform. With powerful data warehouse and AI capabilities, this API is designed to help your business to make data-driven decissions and assess potential risks effectively.  ### Base URL Use the following base URL for all API requests:  ```plaintext https://api.opportify.ai/insights/v1/<endpoint>/<service> ```  ### Features - [**Email Insights:**](/docs/api-reference/email-insights)   - Validate email syntax.   - Identify email types (free, disposable, corporate or unknown).   - Real time verification if the emailDNS:     - Is recheable: Confirms if the email domain has valid MX DNS records using DNS lookup.     - Is deliverable: Checks if the email address exists with its provider and is deliverable using SMTP handshake simulation.     - Is catch-all: Determines if the email domain is configured as a catch-all, which accepts emails for all addresses within the domain.   - Correct well-known misspelled email addresses on the fly.   - Risk assessment based on AI-driven normalized score (200-1000) and static thresholds.      [Access Documentation >>](/docs/api-reference/email-insights)  - [**IP Analysis:**](/docs/api-reference/ip-insights)   - Identify the connection type: `wired`, `mobile`, `enterprise`, `satellite`, `VPN`, `cloud-provider`, `open-proxy`, or `tor`. See the `connectionType` element for details.   - Identify geolocation information (country, city, timezone, language, and more).   - Obtain main WHOIS details such as RIR, ASN, organization, and contacts (abuse, admin, and tech).   - Retrieve information if identified as part of a known trusted provider. (e.g. ZTNE (Zero Trust Network Access))   - Retrieve blocklist up to date statuses, active reports, and latest detection.   - Assess IP risk levels based on an AI-driven normalized score (200-1000) and static thresholds.    [Access Documentation >>](/docs/api-reference/ip-insights)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.10.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * RiskReportTest Class Doc Comment
 *
 * @category    Class
 * @description ### Risk Level Determination This documentation outlines how the risk level is determined based on a &#x60;normalizedScore&#x60; generated by a **multivariate linear regression model**. The risk level provides a static representation of thresholds to classify the severity of risk for an entity.  ---  #### How the Score is Generated  The risk score (&#x60;normalizedScore&#x60;) is computed using a **multivariate linear regression model**, a machine learning approach that evaluates multiple input features to predict the risk score.  ##### Key Features of the Model: 1. **Dynamic Scoring:** The model assigns weights to various risk factors, dynamically updating them based on training with new data. 2. **Constant Training:** The model is continuously retrained with the latest data to improve accuracy and adapt to evolving risk patterns. 3. **Scalability:** The model supports multiple features and their interactions, deriving a comprehensive and reliable risk score.  The output score is normalized to a range of **200â€“1000** for easier interpretation and alignment with industry practices.  ---  #### Risk Level Thresholds  The risk level is a static representation of the &#x60;normalizedScore&#x60;, categorized into five distinct levels:  | **Risk Level** | **Score Range**          | **Description**                                                                 | |----------------|--------------------------|---------------------------------------------------------------------------------| | &#x60;highest&#x60;      | &#x60;normalizedScore &gt; 800&#x60; | Represents the most critical level of risk. Immediate attention is required.   | | &#x60;high&#x60;         | &#x60;600 &lt; normalizedScore &lt;&#x3D; 800&#x60; | Indicates a high level of risk. Consider mitigation actions promptly.          | | &#x60;medium&#x60;       | &#x60;400 &lt; normalizedScore &lt;&#x3D; 600&#x60; | Reflects a moderate level of risk. Monitoring and possible action advised.     | | &#x60;low&#x60;          | &#x60;300 &lt; normalizedScore &lt;&#x3D; 400&#x60; | Denotes a low level of risk. Regular monitoring is sufficient.                 | | &#x60;lowest&#x60;       | &#x60;normalizedScore &lt;&#x3D; 300&#x60; | The lowest level of risk. Risk is considered negligible or minimal.            |  ---  #### Usage  This risk level determination serves as a human-readable representation of the machine learning model&#39;s output. It enables: - **Risk Monitoring:** Identifying entities that require immediate attention. - **Action Prioritization:** Guiding mitigation efforts based on the severity of the risk. - **Decision-Making:** Providing clear thresholds for automated and manual workflows.  ---  #### Key Notes 1. **Dynamic Scoring, Static Levels:**   - While the score is dynamically updated through a multivariate linear regression model, the risk levels remain static to maintain consistency and interpretability.  2. **Customizable Thresholds:**   - The thresholds for the levels are configurable based on organizational needs or domain-specific requirements.  3. **Model Retraining:**    - Regular updates to the model ensure that scores accurately reflect real-world risk trends, improving the reliability of level assignments.  ---  This approach combines the adaptability of multivariate linear regression with the simplicity of static thresholds, offering a robust framework for risk assessment and decision-making.  ---  ### Response Elements
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class RiskReportTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "RiskReport"
     */
    public function testRiskReport()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "score"
     */
    public function testPropertyScore()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "level"
     */
    public function testPropertyLevel()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
